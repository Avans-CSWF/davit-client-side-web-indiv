# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - NxWorkshop

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js version
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'

            - name: npm install, build, and test
              run: |
                  npm install
                  npm run build --if-present
                  # npm run test --if-present

            - name: Zip artifacts for deployment
              run: |
                  echo ${GITHUB_WORKSPACE}
                  cd ${GITHUB_WORKSPACE}/dist/apps/data-api/ && zip ${GITHUB_WORKSPACE}/data-api-release.zip ./* -r
                  cd ${GITHUB_WORKSPACE}/dist/apps/rcmnd-api/ && zip ${GITHUB_WORKSPACE}/rcmnd-api-release.zip ./* -r
                  #cd ${GITHUB_WORKSPACE}/dist/apps/share-a-meal-web/ && zip ${GITHUB_WORKSPACE}/share-a-meal-web-release.zip ./* -r
                  # zip release.zip ./* -r

            #- name: Upload share-a-meal-web artifact for deployment job
            #  uses: actions/upload-artifact@v3
            #  with:
            #      name: node-app-share-a-meal
            #      path: share-a-meal-web-release.zip

            - name: Upload data-api artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: node-app-data-api
                  path: data-api-release.zip

            - name: Upload rcmnd-api artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: node-app-rcmnd-api
                  path: rcmnd-api-release.zip

    #deploy-share-a-meal-web:
    #    runs-on: ubuntu-latest
    #    needs: build
    #    environment:
    #        name: 'Production'
    #        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#
#        steps:
#            - name: Download artifact from build job
#              uses: actions/download-artifact@v4
#              with:
#                  name: node-app-share-a-meal
#
#            - name: Unzip artifact for deployment
#              run: unzip share-a-meal-web-release.zip
#
#            - name: Deploy to static azure web app
#              id: builddeploy
#              uses: Azure/static-web-apps-deploy@v1
#              with:
#                  azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_HILL_073003703 }}
#                  repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
#                  action: 'upload'
#                  ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
#                  # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
#                  app_location: '/' # App source code path
#                  api_location: '' # Api source code path - optional
#                  output_location: '' # Built app content directory - optional
#                  ###### End of Repository/Build Configurations ######

    deploy-data-api:
        runs-on: ubuntu-latest
        needs: build
        environment:
            name: 'Production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: node-app-data-api

            - name: Unzip artifact for deployment
              run: unzip data-api-release.zip

            - name: Install dependencies
              run: npm install

            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v3
              with:
                  app-name: 'NxWorkshop'
                  slot-name: 'Production'
                  publish-profile: ${{ secrets.AZUREAPP_NXWORKSHOP }}
                  package: .
